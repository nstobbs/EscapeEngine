#version 450 core

struct Boid {
    vec3 pos;
    vec3 dir;
};

layout(set = 0, binding = 0) readonly buffer BoidsSSBOIn
{
    Boid boidsIn[ ];
};

layout(set = 1, binding = 0) buffer BoidsSSBOOut
{
    Boid boidsOut[ ];
};

layout(set = 3, binding = 0) uniform BoidsSim {
    float sim_separation;
    float sim_alignment;
    float sim_cohesion;
    float height;
    float width;
    float depth;

    float deltaTime;
} sim;

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint index = gl_GlobalInvocationID.x;
    Boid thisBoid = boidsIn[index];
    //thisBoid.pos.x = thisBoid.pos.x + 0.001f;
    thisBoid.pos = thisBoid.pos + (thisBoid.dir * vec3(0.001f));
    boidsOut[index] = thisBoid;
}